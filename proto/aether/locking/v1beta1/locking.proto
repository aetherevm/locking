syntax = "proto3";
package aether.locking.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/aetherevm/locking/types";

// LockedDelegation defines the locking locked delegations
message LockedDelegation {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // delegator_address is the bech32-encoded address of the delegator
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // validator_address is the bech32-encoded address of the validator
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // entries are all the lockings made on top of the pair
  repeated LockedDelegationEntry entries = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message LockedDelegationEntry {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;
  // shares define the locked shares
  string shares = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // The rate used on calculation
  Rate rate = 2 [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // unlock_on defines when the delegation will be unlocked
  google.protobuf.Timestamp unlock_on = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
  // auto_renew defines if the delegator wants to auto renew the locking after
  // expiration
  bool auto_renew = 4 [ (gogoproto.moretags) = "yaml:\"undelegate\"" ];
  // Incrementing id that uniquely identifies this entry
  uint64 id = 5;
}

// Rate are the rate of rewards for the locked delegations
message Rate {
  option (gogoproto.equal) = true;
  // Duration is the lock duration
  google.protobuf.Duration duration = 1
      [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  // The rate used on calculation
  string rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// LockedDelegationPair define a del and val pair
message LockedDelegationPair {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// DVPairs defines an array of LockedDelegationPairs objects
message LockedDelegationPairs {
  repeated LockedDelegationPair pairs = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// LockedDelegationDelegatorReward represents the properties
// of a delegator's locked delegation reward
message LockedDelegationDelegatorReward {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  // validator_address is the validator address
  string validator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // distribution_reward is the reward from the distribution module
  repeated cosmos.base.v1beta1.DecCoin distribution_reward = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // locking_reward is the reward from the locking module
  repeated cosmos.base.v1beta1.DecCoin locking_reward = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // total is the sum between the distribution_reward and the locking_reward
  repeated cosmos.base.v1beta1.DecCoin total = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// LockedDelegationWithTotalShares defines an locked delegation carrying the
// total shares
message LockedDelegationWithTotalShares {
  LockedDelegation locked_delegation = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  // total_locked is the total shares locked for the delegation
  string total_locked = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}